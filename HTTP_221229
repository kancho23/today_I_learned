목표1. 상태유지와 무상태유지 개념에 대해서 이해한다.
목표2. HTTP 코드 구조에 대해서 이해한다
과정1. 무작정 API URI를 설계해본다.
과정2. 리팩토링을 진행한다.

인터넷 네트워크란?
인터넷은 클라이언트와 서버로 나누어 생각해볼 수 있다.
그 사이 수많은 노드가 있을텐데, 어떤 규칙/과정을 거치는걸까?


IP(인터넷 프로토콜)?
정보를 전달하기 위해선 <IP 주소 부여>라는 규칙이 필요하다.
지정한 주소에, 패킷이라는 단위로 전달한다.
*출발 -> 도착, 도착 -> 출발이 동일한 길로 가는건 아니다.


IP 문제점?
비연결성 : 패킷을 받는 사람이 없어도 전송됨
비신뢰성 : 중간 패킷 사라지거나, 순서대로 안올때 해결안됨
프로그램 구분 : 같은 IP에서 게임하거나, 서핑하는거 어떻게 구분하지?


이를 해결하는 것이 TCP, UDP이다.

우선 인터넷 프로토콜 스택의 4계층은 다음과 같다
애플리케이션(HTTP, FTP) - 전송계층(TCP, UDP) - 인터넷 계층(IP) - 네트워크 인터페이스(LAN driver)

TCP, UDP?
IP에는 출발지 IP주소, 목적지 IP주소가 들어갔다면,
TCP에는 출발지 PORT, 목적지 PORT, 순서제어 등이 들어간다


TCP 특징
1. 연결지향 : 우선 연결부터 하고 보냄
2. 데이터 전달 보증 : 누락되면 내가 알 수 있겠구나
3. 순서 보장


TCP 3 way handshake
1. 클라이언트가 서버에 정보를 주겠다! 라고 말함 (SYN : 접속 요청)
2. 서버가 연결되었다고 다시 말해줌 (SYN + ACK : 접속요청 + 요청 수락)
3. 클라이언트가 이를 확인했다고 말해줌 (ACK : 요청 수락)



이건 개념적으로만 연결된 것일 뿐 실제로 연결된 것이 아니다!
