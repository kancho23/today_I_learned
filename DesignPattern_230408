Creational Pattern : '객체 생성 매커니즘'
- Factory Method
1. 목적 : - Product Interface를 정의하고, Product Interface를 상속받은 Concrete Class들이
         구체적인 Product를 구현하도록해서, Product Class의 생성로직을 하나의 메서드로 관리
2. 장점 : - 다른 Creational 대비 쉽게 구현 가능
          - Product Interface를 사용하는 Context Class와 
          Product Interface를 상속해 구현하는 Product Class가 구분되어 독립적으로 개발 가능(유지보수)
3. 구현 : - 동일 Type의 Product Class가 동일한 Product Interface를 구현하도록
          - Factory Method는 Product Class 객체를 생성해, Product Interface로 반환되도록

ex) 서로 다른 운영체제에서 GUI Component들을, 각 운영체제에 알맞는 Component로 생성
1. Interface 버튼, 체크박스, TextBox를 구현한다
2. 이를 상속받은 각각의 Window, Mac, Linux class를 구현한다
3. GUIComponentTester라는 클래스에서, 1번의 인터페이스를 받아오고
   그 인터페이스가, return class한다. 단 이때 클래스는 2번의 class이다.
4. GUIComponentTester의 생성자에서는 os정보를 받아와, 1번의 인터페이스에 os가 들어가게한다
5. 정보를 출력하거나, 기타 기능을하는 메서드도 추가로 선언해준다(선택)
