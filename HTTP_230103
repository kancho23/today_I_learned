목표1. 상태유지와 무상태유지 개념에 대해서 이해한다.
목표2. HTTP 코드 구조에 대해서 이해한다
목표3. URI와 웹브라우저 요청 흐름에 대해 이해한다.
과정1. 무작정 API URI를 설계해본다.
과정2. 리팩토링을 진행한다.

IP가 아파트면, PORT는 몇 동 몇 호라 생각하면된다.
0~1023은 잘 알려진 포트로 사용하지 않는 것이 좋다.

IP는 기억하기 어렵고, 변경될 수 있다.
이 때문에 중간에 전화번호부처럼 DNS를 사용할 수 있다.
우리가 익히 알고있는 도메인 명 google.com을 생각하면 된다.


URI는 resouce를 식별하는 통합된 방법이다. (URI = URL + URN)
URI는 locator, name 또는 둘 다 추가로 분류될 수 있다.
ex) https://www.google.com:443/search?q=hello&hl=ko

이렇게 요청이 들어가면,
www.google.com 이라는 도메인 명을 통해(DNS 이용), IP:200.200.200.2가 요청된다.
조금 더 자세히 설명하면,
출발지 IP랑 PORT가 담기고, 'GET /search?q=hello&hl=ko HTTTP/1.1 Host:www.google.com'이라는 HTTP 메세지가 담긴
'socket' 형태가 웹 브라우저에서 날라간다.

이것을 '구글 서버'에서 받고, 잘 받으면 웹 브라우저로 '응답 HTTP'를 보낸다.
이를 웹 브라우저에서는 HTML 렌더링을 통해 화면에 나타낸다.
